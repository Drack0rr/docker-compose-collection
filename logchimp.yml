# Docker-compose provided by Mickael "PAPAMICA" Asseline
# Update : 10/05/2022

#& type: 3
#& title: LogChimp
#& description: LogChimp helps you to collect, analyze, and organise your customers feedback.
#& note: Website: <a href='https://logchimp.codecarrot.net/' target='_blank' rel='noopener'>codecarrot.net</a>
#& categories: SelfHosted, PAPAMICA
#& platform: linux
#& logo: https://avatars.githubusercontent.com/u/45693574?s=200&v=4 

#% SERVICE: Name of the service (No spaces or points)
#% DATA_LOCATION: Data localization (Example: /apps/service)
#% URL: Service URL (Example: service.papamica.fr or service.com)
#% NETWORK: Your Traefik network (Example: proxy)
#% DB_USER: Database user
#% DB_PASSWORD: Database user password

# Work with Portainer
version: '2'
services:
  logchimp-db:
    image: postgres:14.2
    container_name: $SERVICE-db
    environment:
      - POSTGRES_DB=logchimp
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
    volumes:
      - $DATA_LOCATION/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default
    labels:  
    - "autoupdate=monitor" # https://github.com/PAPAMICA/container-updater
        
  logchimp:
    image: ghcr.io/logchimp/logchimp
    container_name: $SERVICE
    environment:
      - PG_HOST=$SERVICE-db
      - PG_DATABASE=logchimp
      - APP_KEY=5tknMGisZP4pCqcCkoU
      - PG_USER=logchimp
      - PG_PASSWORD=$DB_PASSWORD
    depends_on:
      - logchimp-db
    healthcheck:
      test: curl --fail http://localhost:8080 || exit 1
      interval: 1m
      timeout: 30s
      retries: 3
    networks:
      - default
    labels:
      - "autoupdate=monitor" # https://github.com/PAPAMICA/container-updater
      - "traefik.enable=true"
      - "traefik.http.routers.$SERVICE.entrypoints=https"
      - "traefik.http.routers.$SERVICE.rule=Host(`$URL`)"
      - "traefik.http.routers.$SERVICE.tls=true"
      - "traefik.http.routers.$SERVICE.tls.certresolver=http"
      - "traefik.http.services.$SERVICE.loadbalancer.server.port=8080"
      - "traefik.docker.network=$NETWORK"


networks:
  default:
    external:
      name: $NETWORK